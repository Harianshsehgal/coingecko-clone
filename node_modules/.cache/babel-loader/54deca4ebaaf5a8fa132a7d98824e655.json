{"ast":null,"code":"var _jsxFileName = \"/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinGraph/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinGraph(props) {\n  _s();\n\n  var _coinApiData$props$gr, _coinApiData$props$gr2;\n\n  const [coinApiData, setCoinApiData] = useState([]);\n  const searchParam = window.location.search;\n  const selectedCoinName = searchParam.substr(9);\n\n  const fetchHistoricalData = async coinName => {\n    await fetch(\"https://api.coingecko.com/api/v3/coins/\" + coinName + \"/market_chart?vs_currency=usd&days=7&interval=hourly\").then(resp => resp.json()).then(resp => setCoinApiData(resp));\n  };\n\n  useEffect(() => {\n    fetchHistoricalData(selectedCoinName);\n  }, []);\n  console.log(\"coinApiData---\", coinApiData);\n  var graphPlotData = (_coinApiData$props$gr = coinApiData[props === null || props === void 0 ? void 0 : props.graphType]) === null || _coinApiData$props$gr === void 0 ? void 0 : _coinApiData$props$gr.map(value => {\n    return value[1];\n  });\n  var timeArray = (_coinApiData$props$gr2 = coinApiData[props === null || props === void 0 ? void 0 : props.graphType]) === null || _coinApiData$props$gr2 === void 0 ? void 0 : _coinApiData$props$gr2.map(value => {\n    return new Date(value[0]);\n  });\n  var timeAxisArray = [];\n\n  for (let index = 0; index < (graphPlotData === null || graphPlotData === void 0 ? void 0 : graphPlotData.length); index++) {\n    timeAxisArray.push(index);\n  }\n\n  const GraphInputData = {\n    labels: timeArray,\n    datasets: [{\n      label: props.graphType,\n      data: graphPlotData,\n      fill: true,\n      backgroundColor: \"rgba(255,255,255,1)\",\n      borderColor: \"rgba(59,130,246,0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: GraphInputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinGraph, \"/pJIlwEZAj6l9bvofhsVSy6yoxE=\");\n\n_c = CoinGraph;\nexport default CoinGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinGraph\");","map":{"version":3,"sources":["/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinGraph/index.jsx"],"names":["React","useEffect","useState","Line","styles","CoinGraph","props","coinApiData","setCoinApiData","searchParam","window","location","search","selectedCoinName","substr","fetchHistoricalData","coinName","fetch","then","resp","json","console","log","graphPlotData","graphType","map","value","timeArray","Date","timeAxisArray","index","length","push","GraphInputData","labels","datasets","label","data","fill","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMO,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAApC;AACA,QAAMC,gBAAgB,GAAGJ,WAAW,CAACK,MAAZ,CAAmB,CAAnB,CAAzB;;AAEA,QAAMC,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAC9C,UAAMC,KAAK,CACT,4CACED,QADF,GAEE,sDAHO,CAAL,CAKHE,IALG,CAKGC,IAAD,IAAUA,IAAI,CAACC,IAAL,EALZ,EAMHF,IANG,CAMGC,IAAD,IAAUX,cAAc,CAACW,IAAD,CAN1B,CAAN;AAOD,GARD;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,mBAAmB,CAACF,gBAAD,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bf,WAA9B;AAIA,MAAIgB,aAAa,4BAAGhB,WAAW,CAACD,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEkB,SAAR,CAAd,0DAAG,sBAA+BC,GAA/B,CAAoCC,KAAD,IAAW;AAChE,WAAOA,KAAK,CAAC,CAAD,CAAZ;AACD,GAFmB,CAApB;AAKF,MAAIC,SAAS,6BAACpB,WAAW,CAACD,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEkB,SAAR,CAAZ,2DAAC,uBAA+BC,GAA/B,CAAoCC,KAAD,IAAW;AAC1D,WAAO,IAAIE,IAAJ,CAASF,KAAK,CAAC,CAAD,CAAd,CAAP;AACD,GAFa,CAAd;AAIE,MAAIG,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAGP,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEQ,MAAlB,CAAzB,EAAmDD,KAAK,EAAxD,EAA4D;AAC1DD,IAAAA,aAAa,CAACG,IAAd,CAAmBF,KAAnB;AACD;;AAID,QAAMG,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAEP,SADa;AAErBQ,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE9B,KAAK,CAACkB,SADf;AAEEa,MAAAA,IAAI,EAAEd,aAFR;AAGEe,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,eAAe,EAAE,qBAJnB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADQ;AAFW,GAAvB;AAaA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEP;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3DQ5B,S;;KAAAA,S;AA4DT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from './styles.css'\n\nfunction CoinGraph(props) {\n\n  const [coinApiData, setCoinApiData] = useState([]);\n\n  const searchParam = window.location.search;\n  const selectedCoinName = searchParam.substr(9);\n\n  const fetchHistoricalData = async (coinName) => {\n    await fetch(\n      \"https://api.coingecko.com/api/v3/coins/\" +\n        coinName +\n        \"/market_chart?vs_currency=usd&days=7&interval=hourly\"\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setCoinApiData(resp));\n  };\n\n  useEffect(() => {\n    fetchHistoricalData(selectedCoinName);\n  }, []);\n\n  console.log(\"coinApiData---\", coinApiData);\n\n\n\n  var graphPlotData = coinApiData[props?.graphType]?.map((value) => {\n    return value[1];\n  });\n\n\nvar timeArray=coinApiData[props?.graphType]?.map((value) => {\n  return new Date(value[0]);\n});\n\n  var timeAxisArray = [];\n  for (let index = 0; index < graphPlotData?.length; index++) {\n    timeAxisArray.push(index);\n  }\n\n  \n\n  const GraphInputData = {\n    labels: timeArray,\n    datasets: [\n      {\n        label: props.graphType,\n        data: graphPlotData,\n        fill: true,\n        backgroundColor: \"rgba(255,255,255,1)\",\n        borderColor: \"rgba(59,130,246,0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Line data={GraphInputData} />\n    </div>\n  );\n}\nexport default CoinGraph;\n"]},"metadata":{},"sourceType":"module"}