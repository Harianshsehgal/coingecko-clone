[{"/Users/harianshsehgal/Development/coingecko-clone/src/index.js":"1","/Users/harianshsehgal/Development/coingecko-clone/src/App.js":"2","/Users/harianshsehgal/Development/coingecko-clone/src/components/NavigationBar/index.jsx":"3","/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinDataTable/index.js":"4","/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinGraph/index.jsx":"5","/Users/harianshsehgal/Development/coingecko-clone/src/Containers/HomePage/index.jsx":"6","/Users/harianshsehgal/Development/coingecko-clone/src/Containers/GraphPage/index.jsx":"7"},{"size":155,"mtime":1646297812696,"results":"8","hashOfConfig":"9"},{"size":616,"mtime":1646302400791,"results":"10","hashOfConfig":"9"},{"size":2071,"mtime":1646298864056,"results":"11","hashOfConfig":"9"},{"size":5309,"mtime":1646303100067,"results":"12","hashOfConfig":"9"},{"size":1308,"mtime":1646305086787,"results":"13","hashOfConfig":"9"},{"size":705,"mtime":1646302739276,"results":"14","hashOfConfig":"9"},{"size":1077,"mtime":1646302109220,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1qegdv7",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/harianshsehgal/Development/coingecko-clone/src/index.js",[],[],["43","44"],"/Users/harianshsehgal/Development/coingecko-clone/src/App.js",[],[],["45","46"],"/Users/harianshsehgal/Development/coingecko-clone/src/components/NavigationBar/index.jsx",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from './styles.css'\n\n\nfunction NavigationBar() {\n  return (\n  \n    <div className=\"nav \">\n      <div className=\"navLeft\">\n        <ul className=\"navbarUlLeft navbarUl\">\n          <li>\n          <Link to='/'>\n          <img className='navImage' alt=\"CoinGecko Logo\" width=\"140\" height=\"39\" src=\"https://static.coingecko.com/s/coingecko-logo-d13d6bcceddbb003f146b33c2f7e8193d72b93bb343d38e392897c3df3e78bdd.png\"></img>\n          </Link>\n          </li>\n          <li className=\"dropDownHover\">\n            <a href=\"#\">Coins</a>\n            <div className=\"dropDownMenu\">\n              <a className=\"dropdown-item \" href=\"\">\n              Market Cap Rank\n              </a>\n              <a className=\"dropdown-item \" href=\"\">\n              Recently Added\n              </a>\n              <a className=\"dropdown-item \" href=\"\">\n              Categories New\n              </a>\n            </div>\n          </li>\n\n          <li className=\"dropDownHover\">   \n            <a href=\"#\">Exchanges</a>\n            <div className=\"dropDownMenu\">\n              <a className=\"dropdown-item \" href=\"\">\n                Spot\n              </a>\n              <a className=\"dropdown-item \" href=\"\">\n                DEX\n              </a>\n              <a className=\"dropdown-item \" href=\"\">\n                Derivatives\n              </a>\n            </div>\n          </li>\n          <li>\n            <a href=\"#\">NFT</a>\n          </li>\n          <li>\n            <a href=\"#\">publications</a>\n          </li>\n          <li>\n            <a href=\"#\">Resources</a>\n          </li>\n          <li>\n            <a href=\"#\">Products</a>\n          </li>\n          <li>\n            <a href=\"#\">GeckoCon 2022</a>\n          </li>\n        </ul>\n      </div>\n      <div className=\"navRight\">\n        <ul className=\"navbarUlRight navbarUl\">\n          <li><a>Portfolio</a></li>\n          <li><a>Login</a></li>\n          <li><a>Sign Up</a></li>\n        </ul>\n      </div>\n    </div>\n   \n  );\n}\n\nexport default NavigationBar;\n","/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinDataTable/index.js",["64","65","66","67","68","69","70"],[],"import React, { useMemo, useState, useEffect } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.css\";\n\n\nconst getCellStyle = (cell) => {\n  if (cell?.getCellProps()[\"key\"].includes(\"_name\")) {\n    return \"coinTableCell\";\n  } else if (\n    cell?.getCellProps()[\"key\"].includes(\"price_change_percentage_24h\")\n  ) {\n    if (cell.value > 0) {\n      return \"cell24hPositive cell24h\";\n    } else {\n      return \"cell24hNegative cell24h\";\n    }\n  } \n  \n  else if(cell?.getCellProps()[\"key\"].includes(\"market_cap_rank\")){\n    return 'rankTableCell'\n  }\n  else if(cell?.getCellProps()[\"key\"].includes(\"current_price\")){\n    return 'priceTableCell'\n  }\n  else {\n    return \"eachTableCell\";\n  }\n};\n\nconst getCellComp = (cell, row) => {\n  // console.log(\"cell===\", cell);\n  return cell?.getCellProps()[\"key\"].includes(\"_name\") ? (\n    <div className=\"coinCell\">\n      <div className=\"coinCellImageName\">\n        <img src={row.original.image} width={20}></img>\n        <div className=\"coinName\">{row.original.name}</div>\n      </div>\n      <div className=\"coinSymbol\">{row.original.symbol.toUpperCase()}</div>\n    </div>\n  ) : (\n    cell.render(\"Cell\")\n  );\n};\n\nexport const CoinDataTable = () => {\n  const [data, setData] = useState([]);\n\n  const CoinData = async () => {\n    await fetch(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setData(resp));\n  };\n  useEffect(() => {\n    CoinData();\n  }, []);\n\n  const COLUMNS = [\n  \n\n    {\n      Header: \"#\",\n      accessor: \"market_cap_rank\",\n      Cell: ({ value }) => {\n        return (  value);\n      },\n    },\n    {\n      \n      Header: \"Coin\",\n      className: \"eachTable\",\n      accessor: \"name\",\n    },\n    {\n      Header: \"  \",\n    Cell: () => <button className=\"buyButton\">Buy</button>,\n    },\n    {\n      Header: \"Price\",\n      accessor: \"current_price\",\n      Cell: ({ value }) => {\n        return \"$\" + value.toFixed(2);\n      },\n    },\n    {\n      Header: \"24h\",\n      accessor: \"price_change_percentage_24h\",\n      Cell: ({ value }) => {\n        return value.toFixed(2) + \"%\";\n      },\n    },\n    {\n      Header: \"Volume\",\n      accessor: \"total_volume\",\n      Cell: ({ value }) => {\n        return \"$\" + value;\n      },\n    },\n    {\n      Header: \"Mkt Cap\",\n      accessor: \"market_cap\",\n      Cell: ({ value }) => {\n        return \"$\" + value;\n      },\n    },\n\n    {\n      width: 300,\n      Header: \"Last 7 days\",\n      accessor: \"id\",\n\n      Cell: ({ value }) => {\n        return (\n          <Link to={\"/graphPage?coin_id=\" + value}>\n            <button className=\"chartsButton\">\n              <i className=\"fa fa-line-chart chartIcon\"></i>Charts\n            </button>\n          </Link>\n        );\n      },\n    },\n  ];\n\n  const columnsHeadingData = useMemo(() => COLUMNS, []);\n  const tableData = data;\n  // console.log(\"tableData\", tableData);\n\n  const tableInstance = useTable(\n    {\n      columns: columnsHeadingData,\n      data: tableData,\n    },\n    useSortBy\n  );\n\n  //destructuring tableInstance\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  console.log(\"getTableProps\", getTableProps());\n  console.log(\"getTableBodyProps()\", getTableBodyProps());\n\n  return (\n    <div className=\"overFlowX\">\n      <table {...getTableProps()} className=\"sortedTable\">\n        <thead className=\"tableHead\">\n          {headerGroups.map((headerGroup) => {\n            return (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => {\n                  {\n                    console.log(\"column--\", column);\n                  }\n                  return (\n                    <th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      className={\n                          column.id != \"name\"\n                          ? \"eachTableHeading\"\n                          : \"nameTableHeading \"\n                      }\n                      \n                    >\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted\n                          ? column.isSortedDesc\n                            ? \" ▼\"\n                            : \" ▲\"\n                          : \"\"}\n                      </span>\n                    </th>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            {/* console.log(\"row--\", row); */}\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  {\n                    /* console.log(\"cell--\", cell.getCellProps()[\"key\"]); */\n                  }\n                  return (\n                    <td {...cell.getCellProps()} className={getCellStyle(cell)}>\n                      {getCellComp(cell, row)}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinGraph/index.jsx",["71","72"],[],"import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from './styles.css'\n\nfunction CoinGraph(props) {\n\n  const [coinApiData, setCoinApiData] = useState([]);\n\n  const searchParam = window.location.search;\n  const selectedCoinName = searchParam.substr(9);\n\n  const fetchHistoricalData = async (coinName) => {\n    await fetch(\n      \"https://api.coingecko.com/api/v3/coins/\" +\n        coinName +\n        \"/market_chart?vs_currency=usd&days=7&interval=hourly\"\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setCoinApiData(resp));\n  };\n\n  useEffect(() => {\n    fetchHistoricalData(selectedCoinName);\n  }, []);\n\n  console.log(\"coinApiData---\", coinApiData);\n\n\n\n  var graphPlotData = coinApiData[props?.graphType]?.map((value) => {\n    return value[1];\n  });\n\n\nvar timeArray=coinApiData[props?.graphType]?.map((value) => {\n  return new Date(value[0]).toLocaleString();\n});\n\n  const GraphInputData = {\n    labels: timeArray,\n    datasets: [\n      {\n        label: props.graphType,\n        data: graphPlotData,\n        fill: true,\n        backgroundColor: \"rgba(255,255,255,1)\",\n        borderColor: \"rgba(59,130,246,0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Line data={GraphInputData} />\n    </div>\n  );\n}\nexport default CoinGraph;\n","/Users/harianshsehgal/Development/coingecko-clone/src/Containers/HomePage/index.jsx",["73","74"],[],"import React, { useEffect, useState } from \"react\";\nimport { CoinDataTable } from \"../../components/CoinDataTable\";\nimport { styles } from \"./styles.css\";\n\nfunction Home() {\n  const [data, setData] = useState([]);\n\n  const dataFetch = async () => {\n    await fetch(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setData(resp));\n  };\n\n  useEffect(() => {\n    dataFetch();\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <h1 className=\"homeHeading\">Cryptocurrency Prices by Market Cap</h1>\n      <CoinDataTable />\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/harianshsehgal/Development/coingecko-clone/src/Containers/GraphPage/index.jsx",["75","76","77","78","79"],[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":18,"column":13,"nodeType":"92","endLine":18,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":20,"column":15,"nodeType":"92","endLine":20,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":23,"column":15,"nodeType":"92","endLine":23,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":26,"column":15,"nodeType":"92","endLine":26,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":33,"column":13,"nodeType":"92","endLine":33,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":35,"column":15,"nodeType":"92","endLine":35,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":38,"column":15,"nodeType":"92","endLine":38,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":41,"column":15,"nodeType":"92","endLine":41,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":47,"column":13,"nodeType":"92","endLine":47,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":50,"column":13,"nodeType":"92","endLine":50,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":53,"column":13,"nodeType":"92","endLine":53,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":56,"column":13,"nodeType":"92","endLine":56,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":59,"column":13,"nodeType":"92","endLine":59,"endColumn":25},{"ruleId":"90","severity":1,"message":"93","line":65,"column":15,"nodeType":"92","endLine":65,"endColumn":18},{"ruleId":"90","severity":1,"message":"93","line":66,"column":15,"nodeType":"92","endLine":66,"endColumn":18},{"ruleId":"90","severity":1,"message":"93","line":67,"column":15,"nodeType":"92","endLine":67,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":36,"column":9,"nodeType":"92","endLine":36,"endColumn":50},{"ruleId":"96","severity":1,"message":"97","line":126,"column":53,"nodeType":"98","endLine":126,"endColumn":55,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":153,"column":19,"nodeType":"102","messageId":"103","endLine":155,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":160,"column":37,"nodeType":"106","messageId":"107","endLine":160,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":184,"column":13,"nodeType":"102","messageId":"103","endLine":184,"endColumn":47},{"ruleId":"100","severity":1,"message":"101","line":189,"column":19,"nodeType":"102","messageId":"103","endLine":191,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"108","line":24,"column":6,"nodeType":"98","endLine":24,"endColumn":8,"suggestions":"109"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":16},{"ruleId":"86","severity":1,"message":"110","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"111","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"112","line":20,"column":39,"nodeType":"106","messageId":"107","endLine":20,"endColumn":41},{"ruleId":"104","severity":1,"message":"112","line":21,"column":39,"nodeType":"106","messageId":"107","endLine":21,"endColumn":41},{"ruleId":"104","severity":1,"message":"112","line":22,"column":39,"nodeType":"106","messageId":"107","endLine":22,"endColumn":41},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'COLUMNS'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'selectedCoinName'. Either include it or remove the dependency array.",["116"],"'data' is assigned a value but never used.","'useEffect' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [COLUMNS]",{"range":"121","text":"122"},"Update the dependencies array to be: [selectedCoinName]",{"range":"123","text":"124"},[2952,2954],"[COLUMNS]",[669,671],"[selectedCoinName]"]