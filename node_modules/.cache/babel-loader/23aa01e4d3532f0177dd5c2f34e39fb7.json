{"ast":null,"code":"var _jsxFileName = \"/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinDataTable/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCellStyle = cell => {\n  if (cell !== null && cell !== void 0 && cell.getCellProps()[\"key\"].includes(\"_name\")) {\n    return \"coinTableCell\";\n  } else if (cell !== null && cell !== void 0 && cell.getCellProps()[\"key\"].includes(\"price_change_percentage_24h\")) {\n    if (cell.value > 0) {\n      return \"cell24hPositive cell24h\";\n    } else {\n      return \"cell24hNegative cell24h\";\n    }\n  } else if (cell !== null && cell !== void 0 && cell.getCellProps()[\"key\"].includes(\"market_cap_rank\")) {\n    return 'rankTableCell';\n  } else if (cell !== null && cell !== void 0 && cell.getCellProps()[\"key\"].includes(\"current_price\")) {\n    return 'priceTableCell';\n  } else {\n    return \"eachTableCell\";\n  }\n};\n\nconst getCellComp = (cell, row) => {\n  // console.log(\"cell===\", cell);\n  return cell !== null && cell !== void 0 && cell.getCellProps()[\"key\"].includes(\"_name\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coinCell\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinCellImageName\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: row.original.image,\n        width: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coinName\",\n        children: row.original.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinSymbol\",\n      children: row.original.symbol.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : cell.render(\"Cell\");\n};\n\nexport const CoinDataTable = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const CoinData = async () => {\n    await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then(resp => resp.json()).then(resp => setData(resp));\n  };\n\n  useEffect(() => {\n    CoinData();\n  }, []);\n  const COLUMNS = [{\n    Header: \"#\",\n    accessor: \"market_cap_rank\",\n    Cell: _ref => {\n      let {\n        value\n      } = _ref;\n      return value;\n    }\n  }, {\n    Header: \"Coin\",\n    className: \"eachTable\",\n    accessor: \"name\"\n  }, {\n    Header: \"  \",\n    Cell: () => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buyButton\",\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)\n  }, {\n    Header: \"Price\",\n    accessor: \"current_price\",\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return \"$\" + value.toFixed(2);\n    }\n  }, {\n    Header: \"24h\",\n    accessor: \"price_change_percentage_24h\",\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return value.toFixed(2) + \"%\";\n    }\n  }, {\n    Header: \"Volume\",\n    accessor: \"total_volume\",\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return \"$\" + value;\n    }\n  }, {\n    Header: \"Mkt Cap\",\n    accessor: \"market_cap\",\n    Cell: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return \"$\" + value;\n    }\n  }, {\n    width: 300,\n    Header: \"Last 7 days\",\n    accessor: \"id\",\n    Cell: _ref6 => {\n      let {\n        value\n      } = _ref6;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/graphPage?coin_id=\" + value,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-line-chart chartIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), \"Charts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const columnsHeadingData = useMemo(() => COLUMNS, []);\n  const tableData = data; // console.log(\"tableData\", tableData);\n\n  const tableInstance = useTable({\n    columns: columnsHeadingData,\n    data: tableData\n  }, useSortBy); //destructuring tableInstance\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  console.log(\"getTableProps\", getTableProps());\n  console.log(\"getTableBodyProps()\", getTableBodyProps());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overFlowX\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      className: \"sortedTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableHead\",\n        children: headerGroups.map(headerGroup => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => {\n              {\n                console.log(\"column--\", column);\n              }\n              return /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n                className: column.id != \"name\" ? \"eachTableHeading\" : \"nameTableHeading \",\n                children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? \" ▼\" : \" ▲\" : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          {\n            /* console.log(\"row--\", row); */\n          }\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              {\n                /* console.log(\"cell--\", cell.getCellProps()[\"key\"]); */\n              }\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                className: getCellStyle(cell),\n                children: getCellComp(cell, row)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinDataTable, \"UsESVOxlLZZVoxHpP+IfBv/xAuw=\", false, function () {\n  return [useTable];\n});\n\n_c = CoinDataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinDataTable\");","map":{"version":3,"sources":["/Users/harianshsehgal/Development/coingecko-clone/src/components/CoinDataTable/index.js"],"names":["React","useMemo","useState","useEffect","useTable","useSortBy","Link","styles","getCellStyle","cell","getCellProps","includes","value","getCellComp","row","original","image","name","symbol","toUpperCase","render","CoinDataTable","data","setData","CoinData","fetch","then","resp","json","COLUMNS","Header","accessor","Cell","className","toFixed","width","columnsHeadingData","tableData","tableInstance","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","console","log","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","id","isSorted","isSortedDesc","getRowProps","cells"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.css\";\n\n\nconst getCellStyle = (cell) => {\n  if (cell?.getCellProps()[\"key\"].includes(\"_name\")) {\n    return \"coinTableCell\";\n  } else if (\n    cell?.getCellProps()[\"key\"].includes(\"price_change_percentage_24h\")\n  ) {\n    if (cell.value > 0) {\n      return \"cell24hPositive cell24h\";\n    } else {\n      return \"cell24hNegative cell24h\";\n    }\n  } \n  \n  else if(cell?.getCellProps()[\"key\"].includes(\"market_cap_rank\")){\n    return 'rankTableCell'\n  }\n  else if(cell?.getCellProps()[\"key\"].includes(\"current_price\")){\n    return 'priceTableCell'\n  }\n  else {\n    return \"eachTableCell\";\n  }\n};\n\nconst getCellComp = (cell, row) => {\n  // console.log(\"cell===\", cell);\n  return cell?.getCellProps()[\"key\"].includes(\"_name\") ? (\n    <div className=\"coinCell\">\n      <div className=\"coinCellImageName\">\n        <img src={row.original.image} width={20}></img>\n        <div className=\"coinName\">{row.original.name}</div>\n      </div>\n      <div className=\"coinSymbol\">{row.original.symbol.toUpperCase()}</div>\n    </div>\n  ) : (\n    cell.render(\"Cell\")\n  );\n};\n\nexport const CoinDataTable = () => {\n  const [data, setData] = useState([]);\n\n  const CoinData = async () => {\n    await fetch(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setData(resp));\n  };\n  useEffect(() => {\n    CoinData();\n  }, []);\n\n  const COLUMNS = [\n  \n\n    {\n      Header: \"#\",\n      accessor: \"market_cap_rank\",\n      Cell: ({ value }) => {\n        return (  value);\n      },\n    },\n    {\n      \n      Header: \"Coin\",\n      className: \"eachTable\",\n      accessor: \"name\",\n    },\n    {\n      Header: \"  \",\n    Cell: () => <button className=\"buyButton\">Buy</button>,\n    },\n    {\n      Header: \"Price\",\n      accessor: \"current_price\",\n      Cell: ({ value }) => {\n        return \"$\" + value.toFixed(2);\n      },\n    },\n    {\n      Header: \"24h\",\n      accessor: \"price_change_percentage_24h\",\n      Cell: ({ value }) => {\n        return value.toFixed(2) + \"%\";\n      },\n    },\n    {\n      Header: \"Volume\",\n      accessor: \"total_volume\",\n      Cell: ({ value }) => {\n        return \"$\" + value;\n      },\n    },\n    {\n      Header: \"Mkt Cap\",\n      accessor: \"market_cap\",\n      Cell: ({ value }) => {\n        return \"$\" + value;\n      },\n    },\n\n    {\n      width: 300,\n      Header: \"Last 7 days\",\n      accessor: \"id\",\n\n      Cell: ({ value }) => {\n        return (\n          <Link to={\"/graphPage?coin_id=\" + value}>\n            <button className=\"\">\n              <i className=\"fa fa-line-chart chartIcon\"></i>Charts\n            </button>\n          </Link>\n        );\n      },\n    },\n  ];\n\n  const columnsHeadingData = useMemo(() => COLUMNS, []);\n  const tableData = data;\n  // console.log(\"tableData\", tableData);\n\n  const tableInstance = useTable(\n    {\n      columns: columnsHeadingData,\n      data: tableData,\n    },\n    useSortBy\n  );\n\n  //destructuring tableInstance\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  console.log(\"getTableProps\", getTableProps());\n  console.log(\"getTableBodyProps()\", getTableBodyProps());\n\n  return (\n    <div className=\"overFlowX\">\n      <table {...getTableProps()} className=\"sortedTable\">\n        <thead className=\"tableHead\">\n          {headerGroups.map((headerGroup) => {\n            return (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => {\n                  {\n                    console.log(\"column--\", column);\n                  }\n                  return (\n                    <th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      className={\n                          column.id != \"name\"\n                          ? \"eachTableHeading\"\n                          : \"nameTableHeading \"\n                      }\n                      \n                    >\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted\n                          ? column.isSortedDesc\n                            ? \" ▼\"\n                            : \" ▲\"\n                          : \"\"}\n                      </span>\n                    </th>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            {/* console.log(\"row--\", row); */}\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  {\n                    /* console.log(\"cell--\", cell.getCellProps()[\"key\"]); */\n                  }\n                  return (\n                    <td {...cell.getCellProps()} className={getCellStyle(cell)}>\n                      {getCellComp(cell, row)}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}